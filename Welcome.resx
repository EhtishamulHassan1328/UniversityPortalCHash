<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>